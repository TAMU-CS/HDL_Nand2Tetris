// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/AggieCipher.hdl

/**
 * Implement a 4-bit dynamic shift cipher(we call it aggie cipher :)) that computes out=in+counter, where counter=<0,1,2,3,4,5,6,....,15,0,1,2,...>
 * Please write the truth table of the circuit in another text file.
 * You may use the 4-bit adder you implemented in project 2
 */

CHIP AggieCipher {
    IN in[4];
    OUT out[4];
    
	PARTS:
    //use pc and DFF to add 1
	PC(in[0]=bit0, in[1]=bit1, in[2]=bit2, in[3]=bit3, inc = true, out[0] = bit0, out[1]=bit1, out[2]=bit2, out[3]=bit3);
	
	HalfAdder(a = in[0], b = bit0, sum = out[0], carry = carry1);
	FullAdder(a = in[1], b = bit1, c = carry1, sum = out[1], carry = carry2);
	FullAdder(a = in[2], b = bit2, c = carry2, sum = out[2], carry = carry3);
	FullAdder(a = in[3], b = bit3, c = carry3, sum = out[3], carry = carry);
}
